define ("format_editortest/local/tests/stateevents",["exports","core/local/reactive/statemanager","format_editortest/local/tests/testbase"],function(a,b,c){"use strict";Object.defineProperty(a,"__esModule",{value:!0});a.default=void 0;b=d(b);c=d(c);function d(a){return a&&a.__esModule?a:{default:a}}function e(a){"@babel/helpers - typeof";if("function"==typeof Symbol&&"symbol"==typeof Symbol.iterator){e=function(a){return typeof a}}else{e=function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a}}return e(a)}function f(a,b){if(!(a instanceof b)){throw new TypeError("Cannot call a class as a function")}}function g(a,b){for(var c=0,d;c<b.length;c++){d=b[c];d.enumerable=d.enumerable||!1;d.configurable=!0;if("value"in d)d.writable=!0;Object.defineProperty(a,d.key,d)}}function h(a,b,c){if(b)g(a.prototype,b);if(c)g(a,c);return a}function i(a,b){if("function"!=typeof b&&null!==b){throw new TypeError("Super expression must either be null or a function")}a.prototype=Object.create(b&&b.prototype,{constructor:{value:a,writable:!0,configurable:!0}});if(b)j(a,b)}function j(a,b){j=Object.setPrototypeOf||function(a,b){a.__proto__=b;return a};return j(a,b)}function k(a){return function(){var b=p(a),c;if(n()){var d=p(this).constructor;c=Reflect.construct(b,arguments,d)}else{c=b.apply(this,arguments)}return l(this,c)}}function l(a,b){if(b&&("object"===e(b)||"function"==typeof b)){return b}return m(a)}function m(a){if(void 0===a){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return a}function n(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return!0}catch(a){return!1}}function p(a){p=Object.setPrototypeOf?Object.getPrototypeOf:function(a){return a.__proto__||Object.getPrototypeOf(a)};return p(a)}var q=function(a){i(c,a);var d=k(c);function c(){f(this,c);return d.apply(this,arguments)}h(c,[{key:"setUp",value:function setUp(){this.fakenode=document.createTextNode(null);this.statemanager=new b.default(function(a,b){if(b===void 0){b=document}b.dispatchEvent(new CustomEvent(a.action,{bubbles:!1,detail:a}))},this.fakenode)}},{key:"tearDown",value:function tearDown(){this.statemanager.setReadOnly(!0)}},{key:"testInitialLoaded",value:function testInitialLoaded(){var a=this,b=this.addAssert("Initial state loaded event"),c=this.addAssert("Check initial event has state data"),d=this.addAssert("Check initial has state object"),e=this.addAssert("Check initial has state object attribute"),f=this.addAssert("Check initial has state object array"),g=this.addAssert("Check initial has state map"),h=this.addAssert("Check initial has state map attribute"),i=this.addAssert("Check initial has state map array");this.fakenode.addEventListener("state:loaded",function(j){var k=j.detail,l=k.state;a.assertTrue(b,!0);a.assertTrue(c,l!==void 0);a.assertTrue(d,l.sampleobj!==void 0);a.assertTrue(e,"sample"===l.sampleobj.name);a.assertTrue(f,2===l.sampleobj.arr.length&&"one"===l.sampleobj.arr[0]);var m=l.samplemap.get("id1");a.assertTrue(g,2==l.samplemap.size&&m);a.assertTrue(h,"Title01"===m.title);a.assertTrue(i,2===m.info.length&&"uno"===m.info[0])});this.statemanager.setInitialState({sampleobj:{name:"sample",arr:["one","two"]},samplemap:[{id:"id1",title:"Title01",info:["uno","dos"]},{id:"id2",title:"Title02",info:["tres","cuatro"]}]})}},{key:"testAlterStateObjectCreateSimple",value:function testAlterStateObjectCreateSimple(){var a=this;this.statemanager.setInitialState({sample:{name:"other",list:["yi","er","san"]}});this.statemanager.setReadOnly(!1);var b=this.addAssert("Check initial has state map"),c=this.statemanager.state;this.fakenode.addEventListener("state.newthing:created",function(c){var d=c.detail;a.assertTrue(b,"myname"==d.state.newthing.name)});c.newthing={name:"myname",mylist:["one","two"]}}},{key:"testAlterStateObjectUpdateSimple",value:function testAlterStateObjectUpdateSimple(){var a=this;this.statemanager.setInitialState({sample:{name:"other",list:["yi","er","san"]}});this.statemanager.setReadOnly(!1);var b=this.addAssert("Check initial has state map attribute"),c=this.statemanager.state;this.fakenode.addEventListener("state.sample:updated",function(c){var d=c.detail;a.assertTrue(b,"anewname"==d.state.sample.name)});c.sample={name:"anewname",list:["uno","dos","tres"]}}},{key:"testAlterStateObjectDeleteSimple",value:function testAlterStateObjectDeleteSimple(){var a=this;this.statemanager.setInitialState({sample:{name:"whatever"}});this.statemanager.setReadOnly(!1);var b=this.addAssert("Check initial has state map array"),c=this.statemanager.state;this.fakenode.addEventListener("state.sample:deleted",function(c){var d=c.detail;a.assertTrue(b,d.state.sample===void 0)});delete c.sample}},{key:"testAlterStateObjectCreateList",value:function testAlterStateObjectCreateList(){var a=this;this.statemanager.setInitialState({samples:[{id:"oid1",name:"some"},{id:"oid2",name:"other"}]});this.statemanager.setReadOnly(!1);var b=this.addAssert("Check initial has state map"),c=this.addAssert("List item #1 updated"),d=this.addAssert("List item #2 updated"),e=this.statemanager.state;this.fakenode.addEventListener("state.newthing2:created",function(c){var d=c.detail;a.assertTrue(b,2==d.state.newthing2.size)});this.fakenode.addEventListener("newthing2[1]:created",function(b){var d=b.detail;a.assertTrue(c,2==d.state.newthing2.size)});this.fakenode.addEventListener("newthing2[2]:created",function(b){var c=b.detail;a.assertTrue(d,2==c.state.newthing2.size)});e.newthing2=[{id:1},{id:2}]}},{key:"testAlterStateObjectUpdateList",value:function testAlterStateObjectUpdateList(){var a=this;this.statemanager.setInitialState({samples:[{id:"oid1",name:"some"},{id:"oid2",name:"other"}]});this.statemanager.setReadOnly(!1);var b=this.addAssert("Check initial has state map attribute"),c=this.addAssert("List item #1 created"),d=this.addAssert("List item #2 created"),e=this.addAssert("List item #3 created"),f=this.statemanager.state;this.fakenode.addEventListener("state.samples:updated",function(c){var d=c.detail;a.assertTrue(b,3==d.state.samples.size)});this.fakenode.addEventListener("samples[1]:created",function(b){var d=b.detail;a.assertTrue(c,3==d.state.samples.size)});this.fakenode.addEventListener("samples[2]:created",function(b){var c=b.detail;a.assertTrue(d,3==c.state.samples.size)});this.fakenode.addEventListener("samples[3]:created",function(b){var c=b.detail;a.assertTrue(e,3==c.state.samples.size)});f.samples=[{id:1},{id:2},{id:3}]}},{key:"testAlterStateObjectDeleteList",value:function testAlterStateObjectDeleteList(){var a=this;this.statemanager.setInitialState({samples:[{id:23,name:"notanymore"}]});this.statemanager.setReadOnly(!1);var b=this.addAssert("Check initial has state map array"),c=this.statemanager.state;this.fakenode.addEventListener("state.samples:deleted",function(c){var d=c.detail;a.assertTrue(b,d.state.samples===void 0)});delete c.samples}},{key:"testPropEventAddSimple",value:function testPropEventAddSimple(){var a=this;this.statemanager.setInitialState({propevents:{name:"something"}});this.statemanager.setReadOnly(!1);var b=this.addAssert("State variable general update event"),c=this.addAssert("Add a new attribute to state variable"),d=this.statemanager.state;this.fakenode.addEventListener("propevents:updated",function(c){var d=c.detail;a.assertTrue(b,d.element.name===d.state.propevents.name)});this.fakenode.addEventListener("propevents.newthing:created",function(b){var d=b.detail;a.assertTrue(c,"newvalue"==d.element.newthing)});d.propevents.newthing="newvalue"}},{key:"testPropEventsUpdateSimple",value:function testPropEventsUpdateSimple(){var a=this;this.statemanager.setInitialState({propevents:{name:"something"}});this.statemanager.setReadOnly(!1);var b=this.addAssert("State variable general update event"),c=this.addAssert("Update and existing attribute to state variable"),d=this.statemanager.state;this.fakenode.addEventListener("propevents:updated",function(c){var d=c.detail;a.assertTrue(b,d.element.name===d.state.propevents.name)});this.fakenode.addEventListener("propevents.name:updated",function(b){var d=b.detail;a.assertTrue(c,"newname"==d.element.name)});d.propevents.name="newname"}},{key:"testPropEventsDeleteSimple",value:function testPropEventsDeleteSimple(){var a=this;this.statemanager.setInitialState({propevents:{name:"something"}});this.statemanager.setReadOnly(!1);var b=this.addAssert("State variable general update event"),c=this.addAssert("Delete and existing attribute to state variable"),d=this.statemanager.state;this.fakenode.addEventListener("propevents:updated",function(c){var d=c.detail;a.assertTrue(b,d.element.name===d.state.propevents.name)});this.fakenode.addEventListener("propevents.name:deleted",function(b){var d=b.detail;a.assertTrue(c,d.element.name===void 0)});delete d.propevents.name}},{key:"testPropEventsAddArray",value:function testPropEventsAddArray(){var a=this;this.statemanager.setInitialState({propevents:{arr:["yi","er","san","si","wu"]}});this.statemanager.setReadOnly(!1);var b=this.addAssert("State variable general update event"),c=this.addAssert("Add a new attribute to state variable"),d=this.statemanager.state;this.fakenode.addEventListener("propevents:updated",function(c){var d=c.detail;a.assertTrue(b,d.element.name===d.state.propevents.name)});this.fakenode.addEventListener("propevents.newthing2:created",function(b){var d=b.detail;a.assertTrue(c,3==d.element.newthing2.length)});d.propevents.newthing2=["Un","Dos","Tres"]}},{key:"testPropEventsUpdateArray",value:function testPropEventsUpdateArray(){var a=this;this.statemanager.setInitialState({propevents:{arr:["yi","er","san","si","wu"]}});this.statemanager.setReadOnly(!1);var b=this.addAssert("State variable general update event"),c=this.addAssert("Update and existing attribute to state variable"),d=this.statemanager.state;this.fakenode.addEventListener("propevents:updated",function(c){var d=c.detail;a.assertTrue(b,d.element.name===d.state.propevents.name)});this.fakenode.addEventListener("propevents.arr:updated",function(b){var d=b.detail;a.assertTrue(c,3==d.element.arr.length)});d.propevents.arr=["Un","Dos","Tres"]}},{key:"testPropEventsDeleteArray",value:function testPropEventsDeleteArray(){var a=this;this.statemanager.setInitialState({propevents:{arr:["yi","er","san","si","wu"]}});this.statemanager.setReadOnly(!1);var b=this.addAssert("State variable general update event"),c=this.addAssert("Delete and existing attribute to state variable"),d=this.statemanager.state;this.fakenode.addEventListener("propevents:updated",function(c){var d=c.detail;a.assertTrue(b,d.element.name===d.state.propevents.name)});this.fakenode.addEventListener("propevents.arr:deleted",function(b){var d=b.detail;a.assertTrue(c,d.element.arr===void 0)});delete d.propevents.arr}},{key:"testMapEventsAddElement",value:function testMapEventsAddElement(){var a=this;this.statemanager.setInitialState({mapevents:[{id:"id1",name:"some"}]});this.statemanager.setReadOnly(!1);var b=this.addAssert("General map update event"),c=this.addAssert("Add a new value to a map"),d=this.statemanager.state;this.fakenode.addEventListener("mapevents:created",function(c){var d=c.detail;a.assertTrue(b,d.element.id==d.state.mapevents.get(d.element.id).id)});this.fakenode.addEventListener("mapevents[new]:created",function(b){var d=b.detail;a.assertTrue(c,"me"==d.element.name)});d.mapevents.add({id:"new",name:"me"})}},{key:"testMapEventsUpdateValue",value:function testMapEventsUpdateValue(){var a=this;this.statemanager.setInitialState({mapevents:[{id:"id1",name:"some"}]});this.statemanager.setReadOnly(!1);var b=this.addAssert("General map update event"),c=this.addAssert("Update an element from a map"),d=this.statemanager.state;this.fakenode.addEventListener("mapevents:updated",function(c){var d=c.detail;a.assertTrue(b,d.element.id==d.state.mapevents.get(d.element.id).id)});this.fakenode.addEventListener("mapevents[id1]:updated",function(b){var d=b.detail;if("id1"===d.element.id){a.assertTrue(c,"updateme"==d.element.name)}});d.mapevents.add({id:"id1",name:"updateme"})}},{key:"testMapEventsDeleteValue",value:function testMapEventsDeleteValue(){var a=this;this.statemanager.setInitialState({mapevents:[{id:"id1",name:"some"}]});this.statemanager.setReadOnly(!1);var b=this.addAssert("General map update event"),c=this.addAssert("Delete an element form a map"),d=this.statemanager.state;this.fakenode.addEventListener("mapevents:deleted",function(c){var d=c.detail;a.assertTrue(b,"id1"==d.element.id&&!d.state.mapevents.has("id1"))});this.fakenode.addEventListener("mapevents[id1]:deleted",function(b){var d=b.detail;a.assertTrue(c,"id1"==d.element.id&&!d.state.mapevents.has("id1"))});d.mapevents.delete("id1")}},{key:"testMapEventsAddAttribute",value:function testMapEventsAddAttribute(){var a=this;this.statemanager.setInitialState({mapevents:[{id:"id1",name:"some"}]});this.statemanager.setReadOnly(!1);var b=this.addAssert("General map update event"),c=this.addAssert("Create an attribute form an element of a map"),d=this.addAssert("Create an attribute form a specific element of a map"),e=this.statemanager.state;this.fakenode.addEventListener("mapevents:updated",function(c){var d=c.detail;a.assertTrue(b,d.element.id==d.state.mapevents.get(d.element.id).id)});this.fakenode.addEventListener("mapevents.newthing:created",function(b){var d=b.detail;a.assertTrue(c,"Yeah"===d.element.newthing);a.assertTrue(null,"id1"===d.element.id)});this.fakenode.addEventListener("mapevents[id1].newthing:created",function(b){var c=b.detail;a.assertTrue(d,"Yeah"===c.element.newthing);a.assertTrue(null,"id1"===c.element.id)});e.mapevents.get("id1").newthing="Yeah"}},{key:"testMapEventsUpdateAttribute",value:function testMapEventsUpdateAttribute(){var a=this;this.statemanager.setInitialState({mapevents:[{id:"id1",name:"some"}]});this.statemanager.setReadOnly(!1);var b=this.addAssert("General map update event"),c=this.addAssert("Update an attribute form an element of a map"),d=this.addAssert("Update an attribute form an specific element of a map"),e=this.statemanager.state;this.fakenode.addEventListener("mapevents:updated",function(c){var d=c.detail;a.assertTrue(b,d.element.id==d.state.mapevents.get(d.element.id).id)});this.fakenode.addEventListener("mapevents.name:updated",function(b){var d=b.detail;a.assertTrue(c,"Maybe"===d.element.name);a.assertTrue(null,"id1"===d.element.id)});this.fakenode.addEventListener("mapevents[id1].name:updated",function(b){var c=b.detail;a.assertTrue(d,"Maybe"===c.element.name);a.assertTrue(null,"id1"===c.element.id)});e.mapevents.get("id1").name="Maybe"}},{key:"testMapEventsDeleteAttribute",value:function testMapEventsDeleteAttribute(){var a=this;this.statemanager.setInitialState({mapevents:[{id:"id1",name:"some"}]});this.statemanager.setReadOnly(!1);var b=this.addAssert("General map update event"),c=this.addAssert("Delete an attribute form an element of a map"),d=this.addAssert("Delete an attribute form an element of a map"),e=this.statemanager.state;this.fakenode.addEventListener("mapevents:updated",function(c){var d=c.detail;a.assertTrue(b,d.element.id==d.state.mapevents.get(d.element.id).id)});this.fakenode.addEventListener("mapevents.name:deleted",function(b){var d=b.detail;a.assertTrue(c,d.element.name===void 0);a.assertTrue(null,"id1"===d.element.id)});this.fakenode.addEventListener("mapevents[id1].name:deleted",function(b){var c=b.detail;a.assertTrue(d,c.element.name===void 0);a.assertTrue(null,"id1"===c.element.id)});delete e.mapevents.get("id1").name}},{key:"testSameValue",value:function testSameValue(a){var b=this;this.statemanager.setInitialState({samevalue:{value:a}});this.statemanager.setReadOnly(!1);var c=this.addAssert("Assign the same value does not trigger a general event",!0),d=this.addAssert("Assign same value does not trigger event",!0),e=this.statemanager.state;this.fakenode.addEventListener("samevalue:updated",function(){b.assertTrue(c,!1)});this.fakenode.addEventListener("samevalue.value:updated",function(){b.assertTrue(d,!1)});e.samevalue.value=a}},{key:"dataProviderTestSameValue",value:function dataProviderTestSameValue(){return{simplevalue1:["sample"],simplevalue2:[!0],simplevalue3:[null],simplevalue4:[!1],simplevalue5:[123],arrayvalue1:[[1,2,3]],arrayvalue2:[["hi","there"]],arrayvalue4:[[!0,null,"here"]],objectvalue1:[{firstname:"John",lastname:"Doe"}],objectvalue2:[{some:!0,other:!1}],objectvalue3:[{some:null,other:12}]}}},{key:"testDifferentValue",value:function testDifferentValue(a,b){var c=this;this.statemanager.setInitialState({diffvalue:{value:a}});this.statemanager.setReadOnly(!1);var d=this.addAssert("Assign the same does not trigger a general event2",!1),e=this.addAssert("Assign same value does not trigger event",!1),f=this.statemanager.state;this.fakenode.addEventListener("diffvalue:updated",function(){c.assertTrue(d,!0)});this.fakenode.addEventListener("diffvalue.value:updated",function(){c.assertTrue(e,!0)});f.diffvalue.value=b}},{key:"dataProviderTestDifferentValue",value:function dataProviderTestDifferentValue(){return{simplevalue1:["sample","something"],simplevalue2:[!0,!1],simplevalue3:[null,"hi!"],simplevalue4:[!1,23],simplevalue5:[123,124],arrayvalue1:[[1,2,3],[1,2,4]],arrayvalue2:[["hi","there"],["hi","me"]],arrayvalue4:[[!0,null,"here"],[!0,12,"here"]],objectvalue1:[{firstname:"John",lastname:"Doe"},{firstname:"John",lastname:"None"}],objectvalue2:[{some:!0,other:!1},{some:!0,other:!0}],objectvalue3:[{some:null,other:12},{some:22,other:23}]}}},{key:"testTransactionEvents",value:function testTransactionEvents(){var a=this;this.statemanager.setInitialState({sample:{name:"other",list:["yi","er","san"]}});this.statemanager.setReadOnly(!1);var b=this.addAssert("Check transaction start"),c=this.addAssert("Attribute updated"),d=this.addAssert("Check transaction end"),e=this.statemanager.state;this.fakenode.addEventListener("transaction:start",function(c){var d=c.detail;a.assertTrue(b,"anewname"==d.state.sample.name)});this.fakenode.addEventListener("state.sample:updated",function(b){var d=b.detail;a.assertTrue(c,"anewname"==d.state.sample.name)});this.fakenode.addEventListener("transaction:end",function(b){var c=b.detail;a.assertTrue(d,"anewname"==c.state.sample.name)});e.sample={name:"anewname",list:["uno","dos","tres"]}}}]);return c}(c.default),r=new q;a.default=r;return a.default});
//# sourceMappingURL=stateevents.min.js.map

{"version":3,"sources":["../../../src/local/examples/unregister.js"],"names":["Component","name","selectors","CONTENT","BUTTON","BOLD","_clickToggler","button","getElement","addEventListener","subcomponent","_createSubcomponent","innerHTML","_unregisterSubcomponent","Displayer","unregister","target","element","document","getElementById","reactive","courseEditor","BaseComponent"],"mappings":"sQA0BA,uD,87DAEqBA,CAAAA,C,+HAKR,CAEL,KAAKC,IAAL,CAAY,YAAZ,CAEA,KAAKC,SAAL,CAAiB,CACbC,OAAO,uBADM,CAEbC,MAAM,uBAFO,CAGbC,IAAI,oBAHS,CAKpB,C,+CA0BY,CACT,KAAKC,aAAL,GAGA,GAAMC,CAAAA,CAAM,CAAG,KAAKC,UAAL,CAAgB,KAAKN,SAAL,CAAeE,MAA/B,CAAf,CACA,KAAKK,gBAAL,CAAsBF,CAAtB,CAA8B,OAA9B,CAAuC,KAAKD,aAA5C,CACH,C,qDAKe,CACZ,GAAI,KAAKI,YAAL,SAAJ,CAAqC,CAEjC,KAAKC,mBAAL,GACA,KAAKH,UAAL,CAAgB,KAAKN,SAAL,CAAeE,MAA/B,EAAuCQ,SAAvC,CAAmD,sBACtD,CAJD,IAIO,CAEH,KAAKC,uBAAL,GACA,KAAKL,UAAL,CAAgB,KAAKN,SAAL,CAAeE,MAA/B,EAAuCQ,SAAvC,CAAmD,eACtD,CACJ,C,4KAMG,KAAKF,YAAL,CAAoB,GAAII,UAAJ,CAAc,IAAd,CAApB,C,iMAOsB,CAKtB,KAAKJ,YAAL,CAAkBK,UAAlB,GACA,KAAKL,YAAL,OACH,C,oCAvDWM,C,CAAQd,C,CAAW,CAE3B,MAAO,IAAIF,CAAAA,CAAJ,CAAc,CACjBiB,OAAO,CAAEC,QAAQ,CAACC,cAAT,CAAwBH,CAAxB,CADQ,CAEjBI,QAAQ,CAAEC,cAFO,CAGjBnB,SAAS,CAATA,CAHiB,CAAd,CAKV,C,cAjCkCoB,e","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Test component example.\n *\n * @module     format_editortest/local/examples/unregister\n * @package    core_course\n * @copyright  2020 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {BaseComponent} from 'core/reactive';\nimport {courseEditor} from 'core_course/courseeditor';\nimport Displayer from 'format_editortest/local/examples/unregister/displayer';\n\nexport default class Component extends BaseComponent {\n\n    /**\n     * Constructor hook.\n     */\n    create() {\n        // Optional component name for debugging.\n        this.name = 'unregister';\n        // Default query selectors.\n        this.selectors = {\n            CONTENT: `[data-for='content']`,\n            BUTTON: `[data-for='toggler']`,\n            BOLD: `[data-for='bold']`,\n        };\n    }\n\n    /**\n     * Static method to create a component instance form the mustahce template.\n     *\n     * We use a static method to prevent mustache templates to know which\n     * reactive instance is used.\n     *\n     * @param {element|string} target the DOM main element or its ID\n     * @param {object} selectors optional css selector overrides\n     * @return {Component}\n     */\n    static init(target, selectors) {\n\n        return new Component({\n            element: document.getElementById(target),\n            reactive: courseEditor,\n            selectors,\n        });\n    }\n\n    /**\n     * Initial state ready method.\n     *\n     * @param {object} state the initial state\n     */\n    stateReady() {\n        this._clickToggler();\n\n        // Just bind a click listener to the component button.\n        const button = this.getElement(this.selectors.BUTTON);\n        this.addEventListener(button, 'click', this._clickToggler);\n    }\n\n    /**\n     * Event click listener for the toggler button.\n     */\n    _clickToggler() {\n        if (this.subcomponent === undefined) {\n            // Create a new displayer component.\n            this._createSubcomponent();\n            this.getElement(this.selectors.BUTTON).innerHTML = 'Unregister component';\n        } else {\n            // Remove the current displayer component.\n            this._unregisterSubcomponent();\n            this.getElement(this.selectors.BUTTON).innerHTML = 'New component';\n        }\n    }\n\n    /**\n     * Register a new subcomponent.\n     */\n    async _createSubcomponent() {\n        this.subcomponent = new Displayer(this);\n    }\n\n\n    /**\n     * Unregister the current subcomponents.\n     */\n    _unregisterSubcomponent() {\n        // In principle, every component is responsible for knowing its own reactive.\n        // For this reason eaci component has a \"unregister\" method. It is not the same\n        // case as removeComponent which is always called from the same parent Component\n        // that call renderComponent.\n        this.subcomponent.unregister();\n        this.subcomponent = undefined;\n    }\n}\n"],"file":"unregister.min.js"}
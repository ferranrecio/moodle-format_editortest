{"version":3,"sources":["../../../src/local/examples/directsubcomponent.js"],"names":["Component","name","selectors","CONTENT","events","Renamer","getEvents","addEventListener","element","renamed","detail","_changeValue","component","getValue","watch","handler","_sampleWatcher","newvalue","reactive","dispatch","target","getElement","innerHTML","samplestring1","document","getElementById","courseEditor","BaseComponent"],"mappings":"uQA0BA,uD,+nDAGqBA,CAAAA,C,+HAKR,CAEL,KAAKC,IAAL,CAAY,SAAZ,CAEA,KAAKC,SAAL,CAAiB,CACbC,OAAO,uBADM,CAGpB,C,+CAyBY,YAIHC,CAAM,CAAGC,UAAQC,SAAR,EAJN,CAKT,KAAKC,gBAAL,CACI,KAAKC,OADT,CAEIJ,CAAM,CAACK,OAFX,CAGI,WAAc,IAAZC,CAAAA,CAAY,GAAZA,MAAY,CACV,CAAI,CAACC,YAAL,CAAkBD,CAAM,CAACE,SAAP,CAAiBC,QAAjB,EAAlB,CACH,CALL,CAOH,C,iDAEa,CACV,MAAO,CACH,CAACC,KAAK,+BAAN,CAAwCC,OAAO,CAAE,KAAKC,cAAtD,CADG,CAGV,C,kDAEYC,C,CAAU,CACnB,KAAKC,QAAL,CAAcC,QAAd,CAAuB,mBAAvB,CAA4C,eAA5C,CAA6DF,CAA7D,CACH,C,wDAEyB,IAAVT,CAAAA,CAAU,GAAVA,OAAU,CAChBY,CAAM,CAAG,KAAKC,UAAL,CAAgB,KAAKnB,SAAL,CAAeC,OAA/B,CADO,CAEtBiB,CAAM,CAACE,SAAP,CAAmBd,CAAO,CAACe,aAC9B,C,oCAxCWH,C,CAAQlB,C,CAAW,CAC3B,MAAO,IAAIF,CAAAA,CAAJ,CAAc,CACjBQ,OAAO,CAAEgB,QAAQ,CAACC,cAAT,CAAwBL,CAAxB,CADQ,CAEjBF,QAAQ,CAAEQ,cAFO,CAGjBxB,SAAS,CAATA,CAHiB,CAAd,CAKV,C,cA9BkCyB,e","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Example of using subcomponents.\n *\n * @module     format_editortest/local/examples/stateready\n * @package    core_course\n * @copyright  2020 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {BaseComponent} from 'core/reactive';\nimport {courseEditor} from 'core_courseformat/courseeditor';\nimport Renamer from 'format_editortest/local/examples/renamer';\n\n\nexport default class Component extends BaseComponent {\n\n    /**\n     * Constructor hook.\n     */\n    create() {\n        // Optional component name for debugging.\n        this.name = 'watcher';\n        // Default query selectors.\n        this.selectors = {\n            CONTENT: `[data-for='content']`,\n        };\n    }\n\n    /**\n     * Static method to create a component instance form the mustahce template.\n     *\n     * We use a static method to prevent mustache templates to know which\n     * reactive instance is used.\n     *\n     * @param {element|string} target the DOM main element or its ID\n     * @param {object} selectors optional css selector overrides\n     * @return {Component}\n     */\n    static init(target, selectors) {\n        return new Component({\n            element: document.getElementById(target),\n            reactive: courseEditor,\n            selectors,\n        });\n    }\n\n    /**\n     * Initial state ready method.\n     *\n     * @param {object} state the initial state\n     */\n    stateReady() {\n        // In this case, the subcomponent is create directly via mustache inclusion, this means\n        // we don't have access to the component instance. However, we can know this component events\n        // using the static getDefaults method.\n        const events = Renamer.getEvents();\n        this.addEventListener(\n            this.element,\n            events.renamed,\n            ({detail}) => {\n                this._changeValue(detail.component.getValue());\n            }\n        );\n    }\n\n    getWatchers() {\n        return [\n            {watch: `course.samplestring1:updated`, handler: this._sampleWatcher},\n        ];\n    }\n\n    _changeValue(newvalue) {\n        this.reactive.dispatch('changeCourseValue', 'samplestring1', newvalue);\n    }\n\n    _sampleWatcher({element}) {\n        const target = this.getElement(this.selectors.CONTENT);\n        target.innerHTML = element.samplestring1;\n    }\n}\n"],"file":"directsubcomponent.min.js"}
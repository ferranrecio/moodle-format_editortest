{"version":3,"sources":["../../../../src/local/examples/lazycomponent/sample.js"],"names":["Component","name","selectors","CONTENT","state","_refreshContent","course","watch","handler","_courseWatcher","element","target","getElement","samplebool","innerHTML","document","getElementById","reactive","BaseComponent"],"mappings":"21DA8BqBA,CAAAA,C,+HAKR,CAEL,KAAKC,IAAL,CAAY,sBAAZ,CAEA,KAAKC,SAAL,CAAiB,CACbC,OAAO,uBADM,CAGpB,C,8CAyBUC,C,CAAO,CACd,KAAKC,eAAL,CAAqBD,CAAK,CAACE,MAA3B,CACH,C,iDAEa,CACV,MAAO,CACH,CAACC,KAAK,4BAAN,CAAqCC,OAAO,CAAE,KAAKC,cAAnD,CADG,CAGV,C,wDAEyB,IAAVC,CAAAA,CAAU,GAAVA,OAAU,CACtB,KAAKL,eAAL,CAAqBK,CAArB,CACH,C,wDAOeJ,C,CAAQ,CACpB,GAAMK,CAAAA,CAAM,CAAG,KAAKC,UAAL,CAAgB,KAAKV,SAAL,CAAeC,OAA/B,CAAf,CACA,GAAIG,CAAM,CAACO,UAAX,CAAuB,CACnBF,CAAM,CAACG,SAAP,+BACH,CAFD,IAEO,CACHH,CAAM,CAACG,SAAP,gEACH,CACJ,C,oCAvCWH,C,CAAQT,C,CAAW,CAC3B,MAAO,IAAIF,CAAAA,CAAJ,CAAc,CACjBU,OAAO,CAAEK,QAAQ,CAACC,cAAT,CAAwBL,CAAxB,CADQ,CAEjBM,QAAQ,CAAE,8BAFO,CAGjBf,SAAS,CAATA,CAHiB,CAAd,CAKV,C,cA9BkCgB,e","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Test component example.\n *\n * This is just a quick copy of format_editortest/local/examples/watcher.js example.\n *\n * @module     format_editortest/local/examples/lazycomponent/sample\n * @package    core_course\n * @copyright  2020 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {BaseComponent} from 'core/reactive';\nimport {getCurrentCourseEditor} from 'core_courseformat/courseeditor';\n\n\nexport default class Component extends BaseComponent {\n\n    /**\n     * Constructor hook.\n     */\n    create() {\n        // Optional component name for debugging.\n        this.name = 'lazycomponent/sample';\n        // Default query selectors.\n        this.selectors = {\n            CONTENT: `[data-for='content']`,\n        };\n    }\n\n    /**\n     * Static method to create a component instance form the mustahce template.\n     *\n     * We use a static method to prevent mustache templates to know which\n     * reactive instance is used.\n     *\n     * @param {element|string} target the DOM main element or its ID\n     * @param {object} selectors optional css selector overrides\n     * @return {Component}\n     */\n    static init(target, selectors) {\n        return new Component({\n            element: document.getElementById(target),\n            reactive: getCurrentCourseEditor(),\n            selectors,\n        });\n    }\n\n    /**\n     * Initial state ready method.\n     *\n     * @param {object} state the initial state\n     */\n    stateReady(state) {\n        this._refreshContent(state.course);\n    }\n\n    getWatchers() {\n        return [\n            {watch: `course.samplebool:updated`, handler: this._courseWatcher},\n        ];\n    }\n\n    _courseWatcher({element}) {\n        this._refreshContent(element);\n    }\n\n    /**\n     * A private method to refresh the content.\n     *\n     * @param {object} course the course state object.\n     */\n    _refreshContent(course) {\n        const target = this.getElement(this.selectors.CONTENT);\n        if (course.samplebool) {\n            target.innerHTML = `The state samplebool is true`;\n        } else {\n            target.innerHTML = `The state samplebool is false. Click the button to toggle it.`;\n        }\n    }\n}\n"],"file":"sample.min.js"}
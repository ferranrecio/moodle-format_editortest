{"version":3,"sources":["../../../src/local/examples/lazyhtml.js"],"names":["Component","name","selectors","CONTENT","state","data","title","course","lazytext","Templates","renderForPromise","html","js","target","getElement","replaceNodeContents","log","error","element","document","getElementById","reactive","BaseComponent"],"mappings":"gPA0BA,OACA,O,i/DAGqBA,CAAAA,C,+HAKR,CAEL,KAAKC,IAAL,CAAY,UAAZ,CAEA,KAAKC,SAAL,CAAiB,CACbC,OAAO,uBADM,CAGpB,C,gFA2BgBC,C,0GAGHC,C,CAAO,CAACC,KAAK,CAAEF,CAAK,CAACG,MAAN,CAAaC,QAArB,C,gBAGYC,WAAUC,gBAAV,CACrB,sDADqB,CAErBL,CAFqB,C,iBAAlBM,C,GAAAA,I,CAAMC,C,GAAAA,E,CAKPC,C,CAAS,KAAKC,UAAL,CAAgB,KAAKZ,SAAL,CAAeC,OAA/B,C,CACfM,UAAUM,mBAAV,CAA8BF,CAA9B,CAAsCF,CAAtC,CAA4CC,CAA5C,E,qDAEAI,UAAIC,KAAJ,CAAU,sBAAV,E,wKA7BIJ,C,CAAQX,C,CAAW,CAC3B,MAAO,IAAIF,CAAAA,CAAJ,CAAc,CACjBkB,OAAO,CAAEC,QAAQ,CAACC,cAAT,CAAwBP,CAAxB,CADQ,CAEjBQ,QAAQ,CAAE,8BAFO,CAGjBnB,SAAS,CAATA,CAHiB,CAAd,CAKV,C,cA9BkCoB,e","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Test component example.\n *\n * @module     format_editortest/local/examples/lazyhtml\n * @package    core_course\n * @copyright  2020 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {BaseComponent} from 'core/reactive';\nimport {getCurrentCourseEditor} from 'core_courseformat/courseeditor';\nimport Templates from 'core/templates';\nimport log from 'core/log';\n\n\nexport default class Component extends BaseComponent {\n\n    /**\n     * Constructor hook.\n     */\n    create() {\n        // Optional component name for debugging.\n        this.name = 'lazyhtml';\n        // Default query selectors.\n        this.selectors = {\n            CONTENT: `[data-for='content']`,\n        };\n    }\n\n    /**\n     * Static method to create a component instance form the mustahce template.\n     *\n     * We use a static method to prevent mustache templates to know which\n     * reactive instance is used.\n     *\n     * @param {element|string} target the DOM main element or its ID\n     * @param {object} selectors optional css selector overrides\n     * @return {Component}\n     */\n    static init(target, selectors) {\n        return new Component({\n            element: document.getElementById(target),\n            reactive: getCurrentCourseEditor(),\n            selectors,\n        });\n    }\n\n    /**\n     * Initial state ready method.\n     *\n     * Note in this case we want our stateReady to be async.\n     *\n     * @param {object} state the initial state\n     */\n    async stateReady(state) {\n        try {\n            // First we collect some data from the state.\n            const data = {title: state.course.lazytext};\n\n            // To render an HTML into our component we just use the regular Templates module.\n            const {html, js} = await Templates.renderForPromise(\n                'format_editortest/local/examples/lazyhtml/samplehtml',\n                data,\n            );\n\n            const target = this.getElement(this.selectors.CONTENT);\n            Templates.replaceNodeContents(target, html, js);\n        } catch (error) {\n            log.error('Cannot load template');\n            throw error;\n        }\n    }\n}\n"],"file":"lazyhtml.min.js"}
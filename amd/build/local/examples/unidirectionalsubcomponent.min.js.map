{"version":3,"sources":["../../../src/local/examples/unidirectionalsubcomponent.js"],"names":["Component","name","selectors","CONTENT","RENAMER","state","content","getElement","innerHTML","course","samplestring2","target","data","inputvalue","renderComponent","log","error","events","Renamer","getEvents","addEventListener","element","renamed","detail","_changeValue","component","getValue","watch","handler","_sampleWatcher","newvalue","reactive","dispatch","document","getElementById","courseEditor","BaseComponent"],"mappings":"4RA0BA,OACA,O,i/DAEqBA,CAAAA,C,+HAKR,CAEL,KAAKC,IAAL,CAAY,SAAZ,CAEA,KAAKC,SAAL,CAAiB,CACbC,OAAO,uBADM,CAEbC,OAAO,uBAFM,CAIpB,C,gFAyBgBC,C,sGAEPC,C,CAAU,KAAKC,UAAL,CAAgB,KAAKL,SAAL,CAAeC,OAA/B,C,CAChBG,CAAO,CAACE,SAAR,CAAoBH,CAAK,CAACI,MAAN,CAAaC,aAAjC,C,SAIUC,C,CAAS,KAAKJ,UAAL,CAAgB,KAAKL,SAAL,CAAeE,OAA/B,C,CACTQ,C,CAAO,CAACC,UAAU,CAAER,CAAK,CAACI,MAAN,CAAaC,aAA1B,C,CACb,KAAKI,eAAL,CAAqBH,CAArB,CAA6B,0CAA7B,CAAyEC,CAAzE,E,mDAEAG,UAAIC,KAAJ,CAAU,8BAAV,E,mBAMEC,C,CAASC,UAAQC,SAAR,E,CACf,KAAKC,gBAAL,CACI,KAAKC,OADT,CAEIJ,CAAM,CAACK,OAFX,CAGI,WAAc,IAAZC,CAAAA,CAAY,GAAZA,MAAY,CACV,CAAI,CAACC,YAAL,CAAkBD,CAAM,CAACE,SAAP,CAAiBC,QAAjB,EAAlB,CACH,CALL,E,yKASU,CACV,MAAO,CACH,CAACC,KAAK,+BAAN,CAAwCC,OAAO,CAAE,KAAKC,cAAtD,CADG,CAGV,C,kDAEYC,C,CAAU,CACnB,KAAKC,QAAL,CAAcC,QAAd,CAAuB,mBAAvB,CAA4C,eAA5C,CAA6DF,CAA7D,CACH,C,wDAEyB,IAAVT,CAAAA,CAAU,GAAVA,OAAU,CAChBV,CAAM,CAAG,KAAKJ,UAAL,CAAgB,KAAKL,SAAL,CAAeC,OAA/B,CADO,CAEtBQ,CAAM,CAACH,SAAP,CAAmBa,CAAO,CAACX,aAC9B,C,oCArDWC,C,CAAQT,C,CAAW,CAC3B,MAAO,IAAIF,CAAAA,CAAJ,CAAc,CACjBqB,OAAO,CAAEY,QAAQ,CAACC,cAAT,CAAwBvB,CAAxB,CADQ,CAEjBoB,QAAQ,CAAEI,cAFO,CAGjBjC,SAAS,CAATA,CAHiB,CAAd,CAKV,C,cA/BkCkC,e","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Example of using subcomponents.\n *\n * @module     format_editortest/local/examples/stateready\n * @package    core_course\n * @copyright  2020 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {BaseComponent} from 'core/reactive';\nimport {courseEditor} from 'core_courseformat/courseeditor';\nimport Renamer from 'format_editortest/local/examples/renamer';\nimport log from 'core/log';\n\nexport default class Component extends BaseComponent {\n\n    /**\n     * Constructor hook.\n     */\n    create() {\n        // Optional component name for debugging.\n        this.name = 'watcher';\n        // Default query selectors.\n        this.selectors = {\n            CONTENT: `[data-for='content']`,\n            RENAMER: `[data-for='renamer']`,\n        };\n    }\n\n    /**\n     * Static method to create a component instance form the mustahce template.\n     *\n     * We use a static method to prevent mustache templates to know which\n     * reactive instance is used.\n     *\n     * @param {element|string} target the DOM main element or its ID\n     * @param {object} selectors optional css selector overrides\n     * @return {Component}\n     */\n    static init(target, selectors) {\n        return new Component({\n            element: document.getElementById(target),\n            reactive: courseEditor,\n            selectors,\n        });\n    }\n\n    /**\n     * Initial state ready method.\n     *\n     * @param {object} state the initial state\n     */\n    async stateReady(state) {\n        // Update the value.\n        const content = this.getElement(this.selectors.CONTENT);\n        content.innerHTML = state.course.samplestring2;\n\n        // Render the subcomponent passing the input value as data.\n        try {\n            const target = this.getElement(this.selectors.RENAMER);\n            const data = {inputvalue: state.course.samplestring2};\n            this.renderComponent(target, 'format_editortest/local/examples/renamer', data);\n        } catch (error) {\n            log.error('Cannot load renamer template');\n            throw error;\n        }\n\n        // Capture subcomponent custom events. We can know the events names from the static getEvents\n        // method of the component class.\n        const events = Renamer.getEvents();\n        this.addEventListener(\n            this.element,\n            events.renamed,\n            ({detail}) => {\n                this._changeValue(detail.component.getValue());\n            }\n        );\n    }\n\n    getWatchers() {\n        return [\n            {watch: `course.samplestring2:updated`, handler: this._sampleWatcher},\n        ];\n    }\n\n    _changeValue(newvalue) {\n        this.reactive.dispatch('changeCourseValue', 'samplestring2', newvalue);\n    }\n\n    _sampleWatcher({element}) {\n        const target = this.getElement(this.selectors.CONTENT);\n        target.innerHTML = element.samplestring2;\n    }\n}\n"],"file":"unidirectionalsubcomponent.min.js"}
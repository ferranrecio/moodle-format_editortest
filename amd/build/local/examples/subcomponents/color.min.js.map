{"version":3,"sources":["../../../../src/local/examples/subcomponents/color.js"],"names":["Component","name","state","_refreshContent","course","button","getElement","selectors","COLOR","addEventListener","_clickColorToggler","watch","handler","_watcher","element","color","myformat","colors","target","CONTENT","style","reactive","length","dispatch","BaseComponent"],"mappings":"uzDA0BqBA,CAAAA,C,+HAKR,CAEL,KAAKC,IAAL,CAAY,OAGf,C,8CAUUC,C,CAAO,CACd,KAAKC,eAAL,CAAqBD,CAAK,CAACE,MAA3B,EAIA,GAAMC,CAAAA,CAAM,CAAG,KAAKC,UAAL,CAAgB,KAAKC,SAAL,CAAeC,KAA/B,CAAf,CACA,KAAKC,gBAAL,CAAsBJ,CAAtB,CAA8B,OAA9B,CAAuC,KAAKK,kBAA5C,CACH,C,iDAEa,CACV,MAAO,CACH,CAACC,KAAK,0BAAN,CAAmCC,OAAO,CAAE,KAAKC,QAAjD,CADG,CAGV,C,4CAEmB,IAAVC,CAAAA,CAAU,GAAVA,OAAU,CAChB,KAAKX,eAAL,CAAqBW,CAArB,CACH,C,wDAOeV,C,CAAQ,OAEdW,CAAK,CAAGX,CAAM,CAACY,QAAP,CAAgBD,KAFV,CAGdE,CAAM,CAAGb,CAAM,CAACY,QAAP,CAAgBC,MAHX,CAKdC,CAAM,CAAG,KAAKZ,UAAL,CAAgB,KAAKC,SAAL,CAAeY,OAA/B,CALK,CAMpBD,CAAM,CAACE,KAAP,CAAaL,KAAb,WAAqBE,CAAM,CAACF,CAAD,CAA3B,gBAAsC,SACzC,C,+DAKoB,IAEXb,CAAAA,CAAK,CAAG,KAAKmB,QAAL,CAAcnB,KAFX,CAGba,CAAK,CAAGb,CAAK,CAACE,MAAN,CAAaY,QAAb,CAAsBD,KAHjB,CAIbE,CAAM,CAAGf,CAAK,CAACE,MAAN,CAAaY,QAAb,CAAsBC,MAJlB,CAOjBF,CAAK,CAAG,CAACA,CAAK,CAAG,CAAT,EAAcE,CAAM,CAACK,MAA7B,CAGA,KAAKD,QAAL,CAAcE,QAAd,CAAuB,gBAAvB,CAAyC,OAAzC,CAAkDR,CAAlD,CACH,C,cAnEkCS,e","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Test component example.\n *\n * @module     format_editortest/local/examples/subcomponents/bold\n * @package    core_course\n * @copyright  2020 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {BaseComponent} from 'core/reactive';\n\nexport default class Component extends BaseComponent {\n\n    /**\n     * Constructor hook.\n     */\n    create() {\n        // Optional component name for debugging.\n        this.name = 'color';\n\n        // This module will use the parent component selectors.\n    }\n\n    // This is an internal submodule so it does not need any init module\n    // asthis module won't be initialized from a mustache file.\n\n    /**\n     * Initial state ready method.\n     *\n     * @param {object} state the initial state\n     */\n    stateReady(state) {\n        this._refreshContent(state.course);\n\n        // Bind button action.\n        // Just bind a click listener to the component button.\n        const button = this.getElement(this.selectors.COLOR);\n        this.addEventListener(button, 'click', this._clickColorToggler);\n    }\n\n    getWatchers() {\n        return [\n            {watch: `course.myformat:updated`, handler: this._watcher},\n        ];\n    }\n\n    _watcher({element}) {\n        this._refreshContent(element);\n    }\n\n    /**\n     * A private method to refresh the content.\n     *\n     * @param {object} course the course state object.\n     */\n    _refreshContent(course) {\n\n        const color = course.myformat.color;\n        const colors = course.myformat.colors;\n\n        const target = this.getElement(this.selectors.CONTENT);\n        target.style.color = colors[color] ?? '#000000';\n    }\n\n    /**\n     * Event click listener for the toggler button.\n     */\n    _clickColorToggler() {\n        // We get the current state value directly from our reactive.\n        const state = this.reactive.state;\n        let color = state.course.myformat.color;\n        let colors = state.course.myformat.colors;\n\n        // Check which color do we want to set.\n        color = (color + 1) % colors.length;\n\n        // This is the way a component ask for mutations.\n        this.reactive.dispatch('changeMyFormat', 'color', color);\n    }\n}\n"],"file":"color.min.js"}